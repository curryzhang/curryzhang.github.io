import{_ as r,W as o,X as s,Y as a,Z as e,a0 as i,a1 as n,C as l}from"./framework-474f8844.js";const d={},c=a("h2",{id:"nuget私有服务器搭建",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#nuget私有服务器搭建","aria-hidden":"true"},"#"),e(" Nuget私有服务器搭建")],-1),u={href:"http://xn--BaGet-cs7j49j.net",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/loic-sharma/BaGet",target:"_blank",rel:"noopener noreferrer"},g=n(`<p>下载Release包：BaGet.zip，直接解压后执行命令：dotnet BaGet.dll</p><p>若发生错误，一般情况有以下几种：</p><ol><li>未安装IIS</li><li>端口5000、5001被占用</li><li>本地未安装3.1运行时</li></ol><p>端口可以直接修改appsetting.json文件，修改了端口号，同时设置了key</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;ApiKey&quot;: &quot;curryzhang&quot;,
&quot;Urls&quot;:&quot;http://*:5008&quot;,
&quot;PackageDeletionBehavior&quot;: &quot;Unlist&quot;,
&quot;AllowPackageOverwrites&quot;: false,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),h={href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},_=n(`<p>再次执行dotnet BaGet.dll</p><h3 id="部署到服务器iis上" tabindex="-1"><a class="header-anchor" href="#部署到服务器iis上" aria-hidden="true">#</a> 部署到服务器IIS上</h3><p>首先创建应用程序池，设置无托管代码</p><figure><img src="https://upload-images.jianshu.io/upload_images/1708638-e6bc775223650d1e.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接着新建网站绑定即可。</p><h3 id="上传包到服务器" tabindex="-1"><a class="header-anchor" href="#上传包到服务器" aria-hidden="true">#</a> 上传包到服务器</h3><p>项目右击--&gt;打包，完成后到目录下执行命令：</p><figure><img src="https://upload-images.jianshu.io/upload_images/1708638-c19a0d12e3c5bf1f.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>上传命令在网站上有，因为我们设置了key，所有执行</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dotnet nuget push -s http://180.76.128.139:5008/v3/index.json 包的名称.nupkg -k curryzhang
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="项目使用包" tabindex="-1"><a class="header-anchor" href="#项目使用包" aria-hidden="true">#</a> 项目使用包</h3><p>首先打开Nuget包管理器，添加源，接着直接搜索就可以了。</p><figure><img src="https://upload-images.jianshu.io/upload_images/1708638-8926ba3db725cabc.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,13);function m(f,b){const t=l("ExternalLinkIcon");return o(),s("div",null,[c,a("p",null,[e("首先我选择了BaGet来搭建，其他的还有NuGet.Server、ProGet、MyGet等。"),a("a",u,[e("BaGet支持.net"),i(t)]),e(" core，目前是3.1版本")]),a("p",null,[e("BaGet地址："),a("a",p,[e("https://github.com/loic-sharma/BaGet"),i(t)])]),g,a("p",null,[e("安装3.1的运行时，包含两个："),a("a",h,[e("ASP.NET"),i(t)]),e(" Core 运行时、.NET 运行时")]),_])}const x=r(d,[["render",m],["__file","Nuget私有服务器搭建.html.vue"]]);export{x as default};
