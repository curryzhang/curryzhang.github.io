(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{193:function(a,e,s){"use strict";s.r(e);var t=s(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 字符串")]),a._v(" "),s("h4",{attrs:{id:"_1、字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 1、字符串")]),a._v(" "),s("p",[a._v("JavaScript的字符串就是用''或\"\"括起来的字符表示。")]),a._v(" "),s("p",[a._v('如果\'本身也是一个字符，那就可以用""括起来，比如"I\'m OK"包含的字符是I，\'，m，空格，O，K这6个字符。')]),a._v(" "),s("p",[a._v("如果字符串内部既包含'又包含\"怎么办？可以用转义字符\\来标识，比如：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("'I\\'m \\\"OK\\\"!';//I'm \"OK\"!\n")])])]),s("p",[a._v("转义字符\\可以转义很多字符，比如\\n表示换行，\\t表示制表符，字符\\本身也要转义，所以\\表示的字符就是\\。")]),a._v(" "),s("p",[a._v("ASCII字符可以以\\x##形式的十六进制表示，例如：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("'\\x41'; // 完全等同于 'A'\n")])])]),s("p",[a._v("还可以用\\u####表示一个Unicode字符：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("'\\u4e2d\\u6587'; // 完全等同于 '中文'\n")])])]),s("h4",{attrs:{id:"_2、多行字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、多行字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 2、多行字符串")]),a._v(" "),s("p",[a._v("由于多行字符串用\\n写起来比较费事，所以最新的ES6标准新增了一种多行字符串的表示方法，用反引号 "),s("code"),a._v(" 表示：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("`这是一个\n多行\n字符串`;\n")])])]),s("h4",{attrs:{id:"_3、模板字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、模板字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 3、模板字符串")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var name = '小明';\nvar age = 20;\nvar message = '你好, ' + name + ', 你今年' + age + '岁了!';\nalert(message);\n")])])]),s("p",[a._v("如果有很多变量需要连接，用+号就比较麻烦。ES6新增了一种模板字符串，表示方法和上面的多行字符串一样，但是它会自动替换字符串中的变量：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var name = '小明';\nvar age = 20;\nvar message = `你好, ${name}, 你今年${age}岁了!`;\nalert(message);\n")])])]),s("h4",{attrs:{id:"_4、操作字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、操作字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 4、操作字符串")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var s = 'Hello, world!';\ns.length; // 13\n")])])]),s("p",[a._v("要获取字符串某个指定位置的字符，使用类似Array的下标操作，索引号从0开始：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var s = 'Hello, world!';\n\ns[0]; // 'H'\ns[6]; // ' '\ns[7]; // 'w'\ns[12]; // '!'\ns[13]; // undefined 超出范围的索引不会报错，但一律返回undefined\n")])])]),s("p",[a._v("需要特别注意的是，字符串是不可变的，如果对字符串的某个索引赋值，不会有任何错误，但是，也没有任何效果：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var s = 'Test';\ns[0] = 'X';\nalert(s); // s仍然为'Test'\n")])])]),s("p",[a._v("toUpperCase()把一个字符串全部变为大写")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var s = 'Hello';\ns.toUpperCase(); // 返回'HELLO'\n")])])]),s("p",[a._v("toLowerCase()把一个字符串全部变为小写")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var s = 'Hello';\nvar lower = s.toLowerCase(); // 返回'hello'并赋值给变量lower\nlower; // 'hello'\n")])])]),s("p",[a._v("indexOf()会搜索指定字符串出现的位置")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var s = 'hello, world';\ns.indexOf('world'); // 返回7\ns.indexOf('World'); // 没有找到指定的子串，返回-1\n")])])]),s("p",[a._v("substring()返回指定索引区间的子串")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var s = 'hello, world'\ns.substring(0, 5); // 从索引0开始到5（不包括5），返回'hello'\ns.substring(7); // 从索引7开始到结束，返回'world'\n")])])])])}],!1,null,null,null);r.options.__file="字符串.md";e.default=r.exports}}]);