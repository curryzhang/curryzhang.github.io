(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{217:function(n,e,s){"use strict";s.r(e);var t=s(2),a=Object(t.a)({},function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"signalr入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signalr入门","aria-hidden":"true"}},[n._v("#")]),n._v(" SignalR入门")]),n._v(" "),s("h3",{attrs:{id:"第一个signalr程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一个signalr程序","aria-hidden":"true"}},[n._v("#")]),n._v(" 第一个SignalR程序")]),n._v(" "),s("p",[n._v("新建一个web空项目，然后新建一个SignalR集线器类 (v2)类文件，并修改类名为ChatHub。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1708638-d4fe2bf2f7880191.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"signalr.png"}})]),n._v(" "),s("p",[n._v("添加一个方法")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("public void Send(string name,string message)\n{\n    Clients.All.sendmessage(name,message);\n}\n")])])]),s("p",[n._v("客户端通过调用ChatHub.Send来发送信息，hub通过调用Clients.All.sendmessage来给客户端发送信息")]),n._v(" "),s("p",[n._v("接着新建一个OWIN Startup类，修改代码")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("public void Configuration(IAppBuilder app)\n{\n    // 有关如何配置应用程序的详细信息，请访问 http://go.microsoft.com/fwlink/?LinkID=316888\n    app.MapSignalR();\n}\n")])])]),s("p",[n._v("这是为了将 SignalR 集线器映射到“/signalr”处的应用生成器管道")]),n._v(" "),s("p",[n._v("接着新建一个index.html,并将它设置为启动项。")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<!DOCTYPE html>\n<html>\n<head>\n    <title>SignalR</title>\n    <style type=\"text/css\">\n        .container {\n            background-color: #99CCFF;\n            border: thick solid #808080;\n            padding: 20px;\n            margin: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <input type=\"text\" id=\"message\" />\n        <input type=\"button\" id=\"sendmessage\" value=\"Send\" />\n        <input type=\"hidden\" id=\"displayname\" />\n        <ul id=\"discussion\"></ul>\n    </div>\n    <script src=\"Scripts/jquery-3.3.1.min.js\"><\/script>\n    <script src=\"Scripts/jquery.signalR-2.3.0.min.js\"><\/script>\n    <script src=\"signalr/hubs\"><\/script>\n    <script type=\"text/javascript\">\n        $(function () {\n            $('#displayname').val(prompt('Enter your name:', ''));\n            $('#message').focus();\n\n            //首先声明一个hub代理\n            var chat = $.connection.chatHub;\n\n            //然后在js脚本里创建一个回调函数，服务端的Hub类会调用这个方法来更新各个客户端\n            chat.client.sendmessage = function (name, message) {\n                var encodedName = $('<div>').text(name).html();\n                var encodedMsg = $('<div>').text(message).html();\n\n                //alert(encodedName + ':' + encodedMsg);\n\n                $('#discussion').append('<li><strong>' + encodedName\n                    + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');\n            };\n\n            //最后开始一个连接，创建一个函数来处理页面上的Send按钮事件。\n            $.connection.hub.start().done(function () {\n                $('#sendmessage').click(function () {\n                    // 调用Hub上的send方法\n                    chat.server.send($('#displayname').val(), $('#message').val());\n                    // 清理textbox并聚焦到textbox上\n                    $('#message').val('').focus();\n                });\n            });\n        });\n    <\/script>\n</body>\n</html>\n")])])]),s("p",[n._v("至此完成！")])])},[],!1,null,null,null);e.default=a.exports}}]);