(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{224:function(e,s,r){"use strict";r.r(s);var a=r(2),t=Object(a.a)({},function(){var e=this,s=e.$createElement,r=e._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"_3、redis初入门"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、redis初入门","aria-hidden":"true"}},[e._v("#")]),e._v(" 3、Redis初入门")]),e._v(" "),r("h2",{attrs:{id:"redis安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis安装","aria-hidden":"true"}},[e._v("#")]),e._v(" Redis安装")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/dmajkic/redis/downloads",target:"_blank",rel:"noopener noreferrer"}},[e._v("下载地址"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("下载到的Redis支持32bit和64bit。根据自己实际情况选择，将64bit的内容cp到自定义盘符安装目录取名redis。 如 C:\\reids")]),e._v(" "),r("p",[e._v("打开一个cmd窗口 使用cd命令切换目录到 C:\\redis 运行 redis-server.exe redis.conf 。")]),e._v(" "),r("p",[e._v("这时候另启一个cmd窗口，原来的不要关闭，不然就无法访问服务端了。")]),e._v(" "),r("p",[e._v("切换到redis目录下运行 redis-cli.exe -h 127.0.0.1 -p 6379 。")]),e._v(" "),r("h2",{attrs:{id:"redis数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis数据类型","aria-hidden":"true"}},[e._v("#")]),e._v(" Redis数据类型")]),e._v(" "),r("p",[e._v("Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。")]),e._v(" "),r("h4",{attrs:{id:"string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string","aria-hidden":"true"}},[e._v("#")]),e._v(" string")]),e._v(" "),r("p",[e._v("string类型是Redis最基本的数据类型，一个key对应一个value，一个键最大能存储512MB")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('redis 127.0.0.1:6379> set name jack\nOK\nredis 127.0.0.1:6379> get name\n"jack"\n')])])]),r("p",[e._v("string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象")]),e._v(" "),r("h4",{attrs:{id:"hash-哈希"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hash-哈希","aria-hidden":"true"}},[e._v("#")]),e._v(" Hash(哈希)")]),e._v(" "),r("p",[e._v("Redis hash 是一个键值对集合。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('redis 127.0.0.1:6379> hmset user:1 username curry password 123asd age 12 sex 1\nOK\nredis 127.0.0.1:6379> hgetall user:1\n1) "username"\n2) "curry"\n3) "password"\n4) "123asd"\n5) "age"\n6) "12"\n7) "sex"\n8) "1"\n')])])]),r("p",[e._v("Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。")]),e._v(" "),r("p",[e._v("每个 hash 可以存储 232 - 1 键值对（40多亿）。")]),e._v(" "),r("h4",{attrs:{id:"list"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#list","aria-hidden":"true"}},[e._v("#")]),e._v(" List")]),e._v(" "),r("p",[e._v("Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素导列表的头部（lpush）或者尾部（rpush）")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('redis 127.0.0.1:6379> lpush user jack\n(integer) 1\nredis 127.0.0.1:6379> lpush user curry\n(integer) 2\nredis 127.0.0.1:6379> lpush user alan\n(integer) 3\nredis 127.0.0.1:6379> lrange user 0 3\n1) "alan"\n2) "curry"\n3) "jack"\n')])])]),r("p",[e._v("在头和尾再分别加上一个")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('redis 127.0.0.1:6379> lpush user james\n(integer) 4\nredis 127.0.0.1:6379> rpush user blues\n(integer) 5\nredis 127.0.0.1:6379> lrange user 0 5\n1) "james"\n2) "alan"\n3) "curry"\n4) "jack"\n5) "blues"\n')])])]),r("p",[e._v("列表最多可存储 232 - 1 元素 (4294967295, 每个列表可存储40多亿)。")]),e._v(" "),r("h4",{attrs:{id:"set"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#set","aria-hidden":"true"}},[e._v("#")]),e._v(" Set")]),e._v(" "),r("p",[e._v("Redis的Set是string类型的无序集合。\n集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('redis 127.0.0.1:6379> sadd userinfo jack\n(integer) 1\nredis 127.0.0.1:6379> sadd userinfo alan\n(integer) 1\nredis 127.0.0.1:6379> sadd userinfo james\n(integer) 1\nredis 127.0.0.1:6379> sadd userinfo james\n(integer) 0\nredis 127.0.0.1:6379> smembers userinfo\n1) "james"\n2) "alan"\n3) "jack"\n')])])]),r("p",[e._v("添加成功会返回1，失败是0。示例中是因为集合内元素的唯一性导致添加失败")]),e._v(" "),r("p",[e._v("集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。")]),e._v(" "),r("h4",{attrs:{id:"zset"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zset","aria-hidden":"true"}},[e._v("#")]),e._v(" Zset")]),e._v(" "),r("p",[e._v("zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。\n使用方法")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("zadd key score member\n")])])]),r("p",[e._v("zset的成员是唯一的,但分数(score)却可以重复")]),e._v(" "),r("p",[e._v("我们就是通过score进行排序的")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('redis 127.0.0.1:6379> zadd workers 0 curry\n(integer) 1\nredis 127.0.0.1:6379> zadd workers 0 hello\n(integer) 1\nredis 127.0.0.1:6379> zrangebyscore  workers 0 1000\n1) "curry"\n2) "hello"\nredis 127.0.0.1:6379> zadd workers 9 james\n(integer) 1\nredis 127.0.0.1:6379> zadd workers 1 jack\n(integer) 1\nredis 127.0.0.1:6379> zrangebyscore  workers 0 1000\n1) "curry"\n2) "hello"\n3) "jack"\n4) "james"\n')])])])])},[],!1,null,null,null);s.default=t.exports}}]);