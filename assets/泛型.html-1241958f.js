const t=JSON.parse('{"key":"v-4a967d05","path":"/csharp/%E6%B3%9B%E5%9E%8B.html","title":"C#重温—泛型","lang":"zh-CN","frontmatter":{"title":"C#重温—泛型","icon":"page","order":1,"author":"curryzhang","date":"2020-03-20T00:00:00.000Z","category":["C#"],"tag":["C#"],"sticky":false,"star":false,"description":"泛型定义 泛型就是泛指的类型。这是在.NET Framework 2.0出现的语法。 泛型的好处： 类型的安全性 代码的可重用性 提升效率（避免了不必要的装箱拆箱）。 下面我分别来说明这三点。 泛型会约束变量的类型。比如ArryList可以添加任意类型的值，而List&lt;int&gt;只能添加int类型的值","head":[["meta",{"property":"og:url","content":"https://github.com/curryzhang/CurryBook/csharp/%E6%B3%9B%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"小东视界"}],["meta",{"property":"og:title","content":"C#重温—泛型"}],["meta",{"property":"og:description","content":"泛型定义 泛型就是泛指的类型。这是在.NET Framework 2.0出现的语法。 泛型的好处： 类型的安全性 代码的可重用性 提升效率（避免了不必要的装箱拆箱）。 下面我分别来说明这三点。 泛型会约束变量的类型。比如ArryList可以添加任意类型的值，而List&lt;int&gt;只能添加int类型的值"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"curryzhang"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:published_time","content":"2020-03-20T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C#重温—泛型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-03-20T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"curryzhang\\"}]}"]]},"headers":[{"level":3,"title":"泛型定义","slug":"泛型定义","link":"#泛型定义","children":[]},{"level":3,"title":"泛型约束","slug":"泛型约束","link":"#泛型约束","children":[]},{"level":3,"title":"泛型函数","slug":"泛型函数","link":"#泛型函数","children":[]},{"level":3,"title":"泛型委托Action和Func","slug":"泛型委托action和func","link":"#泛型委托action和func","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.07,"words":920},"filePathRelative":"csharp/泛型.md","localizedDate":"2020年3月20日","excerpt":"<h3> 泛型定义</h3>\\n<p>泛型就是泛指的类型。<a href=\\"http://xn--3dsp36ahp5a.NET\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这是在.NET</a> Framework 2.0出现的语法。</p>\\n<p><strong>泛型的好处：</strong></p>\\n<ul>\\n<li>类型的安全性</li>\\n<li>代码的可重用性</li>\\n<li>提升效率（避免了不必要的装箱拆箱）。</li>\\n</ul>\\n<p>下面我分别来说明这三点。</p>\\n<ol>\\n<li>泛型会约束变量的类型。比如ArryList可以添加任意类型的值，而<code>List&lt;int&gt;</code>只能添加int类型的值</li>\\n</ol>","autoDesc":true}');export{t as data};
